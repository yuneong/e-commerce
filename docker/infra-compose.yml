version: '3'
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=loopers
      - MYSQL_CHARACTER_SET=utf8mb4
      - MYSQL_COLLATE=utf8mb4_general_ci
    volumes:
      - mysql-8-data:/var/lib/mysql

  # Redis 서버 설정
  # - Redis Master: 쓰기/읽기 모두 가능
  redis-master:
    image: redis:7.0 # Redis 7.0 이미지 사용
    container_name: redis-master # 컨테이너 이름
    ports:
      - "6379:6379" # 호스트(로컬) 포트 : 레디스 컨데이터 포트
    volumes:
      - redis_master_data:/data # 도커 볼륨에 데이터 영구 저장 -> 컨테이너 재시작/삭제해도 데이터 유지 (데이터 영속성)
    command:
      [
        "redis-server", # redis 서버 실행 명령어
        "--appendonly", "yes", # AOF (AppendOnlyFile) 영속성 기능 켜기
        "--save", "", # 스냅샷 저장 비활성화
        "--latency-monitor-threshold", "100", # 특정 명령어(command) 가 지정 시간(100ms) 이상 걸리면 monitor 기록
      ]
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6379", "PING" ]
      interval: 5s # 5초마다 redis-cli ping 명령 실행 -> pong 응답 오면 정상 상태로 판단
      timeout: 2s # 2초 안에 응답이 없으면 실패로 간주
      retries: 10 # 최대 10번 재시도

  # 읽기 전용 Redis 서버 설정 (slave/replica)
  # - Redis Read-Only: 읽기 전용, 쓰기 불가
  redis-readonly:
    image: redis:7.0
    container_name: redis-readonly
    depends_on:
      redis-master:
        condition: service_healthy # redis-master 컨테이너가 healthcheck 통과해야만 실행됨
    ports:
      - "6380:6379" # # 호스트(로컬) 포트 : 레디스 컨데이터 포트
    volumes:
      - redis_readonly_data:/data # replica 데이터도 별도 볼륨에 저장
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--appendfsync", "everysec", # 1초마다 AOF 기록 (성능과 안정성 균형)
        "--replicaof", "redis-master", "6379", # replica 모드로 실행 + 서비스 명, 서비스 포트 (redis-master를 복제 대상으로 설정)
        "--replica-read-only", "yes", # 읽기 전용으로 설정
        "--latency-monitor-threshold", "100",
      ]
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6379", "PING" ]
      interval: 5s
      timeout: 2s
      retries: 10

volumes:
  mysql-8-data:
  redis_master_data:
  redis_readonly_data:

networks:
  default: